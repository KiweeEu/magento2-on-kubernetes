apiVersion: v1
kind: Service
metadata:
  name: magento-web
  labels:
    app: magento-web
    k8s-app: magento
spec:
  ports:
  - name: "fpm"
    port: 9000
    protocol: TCP
    targetPort: 9000
  - name: "http"
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: magento-web

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: magento-web
  labels:
    app: magento-web
    k8s-app: magento
spec:
  replicas: 1
  selector:
    matchLabels:
      app: magento-web
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 30%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: magento-web
        k8s-app: magento
    spec:
      initContainers:
      - name: wait-for-db
        image: kiweeteam/magento2:2.4.5-p3-1@sha256:1f7252b5dc036a7c94f9b4d33bc1c0e18e5380f84919cd17e2c1a5f1084f9bb8
        command:
          - /bin/bash
        args:
        - -c
        - |
          while ! nc -z $DB_HOST 3306;
          do
            echo "Waiting for database...";
            sleep 1;
          done;
          echo "Database found";
        envFrom:
        - configMapRef:
            name: config
        - configMapRef:
            name: additional
      - name: setup
        image: kiweeteam/magento2:2.4.5-p3-1@sha256:1f7252b5dc036a7c94f9b4d33bc1c0e18e5380f84919cd17e2c1a5f1084f9bb8
        command:
        - /bin/bash
        args:
        - -c
        - |
          set -o errexit
          # Update database schema if needed
          php bin/magento setup:db:status || php bin/magento setup:upgrade --keep-generated
          # Fail if database schema is not up-to-date after setup:upgrade
          php bin/magento setup:db:status
          # Import config if needed
          php bin/magento app:config:status || php bin/magento app:config:import
          # Fail if config is not up-to-date after app:config:import
          php bin/magento app:config:status
        envFrom:
        - configMapRef:
            name: config
        - configMapRef:
            name: additional
      containers:
      - image: kiweeteam/magento2:2.4.5-p3-1@sha256:1f7252b5dc036a7c94f9b4d33bc1c0e18e5380f84919cd17e2c1a5f1084f9bb8
        imagePullPolicy: IfNotPresent
        name: magento-web
        ports:
        - containerPort: 9000
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          httpGet:
            path: /health_check.php
            port: 8080
        livenessProbe:
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          httpGet:
            path: /health_check.php
            port: 8080
        resources:
          limits:
            cpu: 250m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 1Gi
        envFrom:
        - configMapRef:
            name: config
        - configMapRef:
            name: additional
        volumeMounts:
        - name: media
          mountPath: /var/www/html/pub/media
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: media
