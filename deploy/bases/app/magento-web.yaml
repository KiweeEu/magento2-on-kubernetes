apiVersion: v1
kind: Service
metadata:
  name: magento-web
  labels:
    app: magento
    component: web
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  - name: proxy
    port: 8081
    protocol: TCP
    targetPort: proxy
  - name: php-metrics
    port: 9253
    protocol: TCP
    targetPort: php-metrics
  - name: nginx-metrics
    port: 9113
    protocol: TCP
    targetPort: nginx-metrics
  selector:
    app: magento
    component: web

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: magento-web
  labels:
    app: magento
    component: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: magento
      component: web
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 30%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: magento
        component: web
    spec:
      initContainers:
      - name: wait-for-db
        image: kiweeteam/magento2:2.4.6-p7-2@sha256:76d56f42a859ec70e193257c5c22992efb61a1b818f217f316fc9d0899a8a30a
        command:
          - /bin/bash
        args:
        - -c
        - |
          while ! nc -z $DB_HOST 3306;
          do
            echo "Waiting for database...";
            sleep 1;
          done;
          echo "Database found";
        env:
        - name: DB_HOST
          value: db
        envFrom:
        - configMapRef:
            name: config
        - configMapRef:
            name: additional
      - name: wait-for-elasticsearch
        image: curlimages/curl:8.11.1@sha256:c1fe1679c34d9784c1b0d1e5f62ac0a79fca01fb6377cdd33e90473c6f9f9a69
        command: ["/bin/sh"]
        args:
        - -c
        - |
          while ! curl -kILSs --fail -XGET \
            $(CONFIG__DEFAULT__CATALOG__SEARCH__ELASTICSEARCH7_SERVER_HOSTNAME):$(CONFIG__DEFAULT__CATALOG__SEARCH__ELASTICSEARCH7_SERVER_PORT)
          do echo "waiting for $(CONFIG__DEFAULT__CATALOG__SEARCH__ELASTICSEARCH7_SERVER_HOSTNAME):$(CONFIG__DEFAULT__CATALOG__SEARCH__ELASTICSEARCH7_SERVER_PORT)"
          sleep 1
          done
        envFrom:
        - configMapRef:
            name: config
        - configMapRef:
            name: additional
      - name: setup
        image: kiweeteam/magento2:2.4.6-p7-2@sha256:76d56f42a859ec70e193257c5c22992efb61a1b818f217f316fc9d0899a8a30a
        command:
        - /bin/bash
        args:
        - -c
        - |
          set -o errexit
          # Update database schema if needed
          php bin/magento setup:db:status || php bin/magento setup:upgrade --keep-generated
          # Fail if database schema is not up-to-date after setup:upgrade
          php bin/magento setup:db:status
          # Import config if needed
          php bin/magento app:config:status || php bin/magento app:config:import
          # Fail if config is not up-to-date after app:config:import
          php bin/magento app:config:status
        env:
        - name: DB_HOST
          value: db
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: MYSQL_DATABASE
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: MYSQL_USER
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: MYSQL_PASSWORD
        envFrom:
        - configMapRef:
            name: config
        - configMapRef:
            name: additional
      containers:
      - image: kiweeteam/magento2:2.4.6-p7-2@sha256:76d56f42a859ec70e193257c5c22992efb61a1b818f217f316fc9d0899a8a30a
        imagePullPolicy: IfNotPresent
        name: magento-web
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: proxy
          containerPort: 8081
          protocol: TCP
        - name: nginx-status
          containerPort: 6081
          protocol: TCP
        - name: fpm-status
          containerPort: 9001
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          httpGet:
            path: /health_check.php
            port: 8080
        livenessProbe:
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          httpGet:
            path: /health_check.php
            port: 8080
        resources:
          limits:
            cpu: 250m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 1Gi
        env:
        - name: DB_HOST
          value: db
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: MYSQL_DATABASE
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: MYSQL_USER
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: MYSQL_PASSWORD
        envFrom:
        - configMapRef:
            name: config
        - configMapRef:
            name: additional
        - secretRef:
            name: magento-admin
        volumeMounts:
        - mountPath: /var/www/html/pub/media
          name: media
          subPath: media
      - name: php-metrics-exporter
        image: hipages/php-fpm_exporter@sha256:9b5be9d3d9551e5f0155988dd799c55d6a5c08d1ce47218fccd1b030cfdd3447
        env:
        - name: PHP_FPM_SCRAPE_URI
          value: tcp://127.0.0.1:9001/status
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 50m
            memory: 128Mi
        ports:
        - name: php-metrics
          containerPort: 9253
          protocol: TCP
      - name: nginx-metrics-exporter
        image: nginx/nginx-prometheus-exporter:1.4.1@sha256:a146e4e56cedf2bd4858ce0d04cf4da0b7ce1c88b7973f9221934c8651fa3e1c
        args:
        - --nginx.scrape-uri=http://127.0.0.1:6081/stub_status
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 50m
            memory: 128Mi
        ports:
        - name: nginx-metrics
          containerPort: 9113
          protocol: TCP
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: media
